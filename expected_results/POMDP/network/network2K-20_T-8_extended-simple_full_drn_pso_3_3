(stormenv) gradandpostdoc@asg-a32253:~/murat/qcqp/pomdp$ python3 parameter_synthesis.py load-problem pomdp_fsc_new_/network/network2K-20_T-8_extended-simple_full.drn pomdp_fsc_new_/network/performance.pctl  set-threshold 3.30 find-feasible-instantiation --qcqp-mc full --qcqp-incremental below pso
Loading configuration
Loaded configuration
parameter_synthesis.py
load-problem
pomdp_fsc_new_/network/network2K-20_T-8_extended-simple_full.drn
pomdp_fsc_new_/network/performance.pctl
set-threshold
3.30
find-feasible-instantiation
--qcqp-mc
full
--qcqp-incremental
below
pso
{}
Assume input is direct encoded
DTMC
Searching for parameters parameters!
Next line contains parameters!
Number of parameters: 596
Parsing R{"dropped_packets"}=? [F "goal"]
Parse formula R=? [F "goal"] without a program.
Call stormpy for constraints
Build model
 WARN (DirectEncodingParser.cpp:120): No. of actions has to be declared. We may continue now, but future versions might not support this.
Built a model with 5040 states and 13327 transitions
Bisimulation yields model with 5040 states, 5040 actions and 13327 transitions
Stormpy finished collecting constraints
Push [1]
Call Z3 cli tool with timeout 10.0
SMT result:	unsat
Parse formula R=? [F "goal"] without a program.
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 9.880723426407492 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 9.880723426407492 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 9.602407699092245 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 9.37723163259518 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 9.262916738737376 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 9.072549187899178 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.942915471096555 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.806826339399521 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.746013973670722 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.65195487290963 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.593717605541102 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.514292549650914 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.470105317558108 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.423283374508632 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.379318125634803 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.353927342690536 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.31839824257269 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.284208048905873 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.267540558156874 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.246273123426562 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.231661973193546 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.218234055674817 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.19547408717131 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.179991494156546 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.172386854195668 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.164450062779306 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.15471150414838 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.145348250926435 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.136853837766981 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.129433957163261 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.122157362682543 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.118071043491785 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.11102044568772 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.107558210093883 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.10390251115323 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.09992029289958 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.096312870555572 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.094419310844868 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.0915391964887 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.088676953616254 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.08650107225461 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.083812999592034 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.08164289076636 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.08024309828253 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.078545066990369 with 33/10
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.077151127716153 with 33/10
Time out has elapsed after 1200 seconds:
Traceback (most recent call last):
  File "parameter_synthesis.py", line 733, in <module>
    state = parameter_synthesis.main(standalone_mode=False)[0]
  File "/home/gradandpostdoc/stormenv/lib/python3.6/site-packages/click-8.0.1-py3.6.egg/click/core.py", line 1062, in main
    rv = self.invoke(ctx)
  File "/home/gradandpostdoc/stormenv/lib/python3.6/site-packages/click-8.0.1-py3.6.egg/click/core.py", line 1699, in invoke
    rv.append(sub_ctx.command.invoke(sub_ctx))
  File "/home/gradandpostdoc/stormenv/lib/python3.6/site-packages/click-8.0.1-py3.6.egg/click/core.py", line 1404, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/home/gradandpostdoc/stormenv/lib/python3.6/site-packages/click-8.0.1-py3.6.egg/click/core.py", line 763, in invoke
    return __callback(*args, **kwargs)
  File "/home/gradandpostdoc/stormenv/lib/python3.6/site-packages/click-8.0.1-py3.6.egg/click/decorators.py", line 84, in new_func
    return ctx.invoke(f, obj, *args, **kwargs)
  File "/home/gradandpostdoc/stormenv/lib/python3.6/site-packages/click-8.0.1-py3.6.egg/click/core.py", line 763, in invoke
    return __callback(*args, **kwargs)
  File "parameter_synthesis.py", line 510, in find_feasible_instantiation
    raise ValueError("Result does not match threshold")
ValueError: Result does not match threshold
