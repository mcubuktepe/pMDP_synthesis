(stormenv) gradandpostdoc@asg-a32253:~/murat/qcqp/pomdp$ python3 parameter_synthesis.py load-problem pomdp_fsc_new_/network/network2K-20_T-8_extended-simple_full.drn pomdp_fsc_new_/network/performance.pctl  set-threshold 5 find-feasible-instantiation --qcqp-mc full --qcqp-incremental below pso
Loading configuration
Loaded configuration
parameter_synthesis.py
load-problem
pomdp_fsc_new_/network/network2K-20_T-8_extended-simple_full.drn
pomdp_fsc_new_/network/performance.pctl
set-threshold
5
find-feasible-instantiation
--qcqp-mc
full
--qcqp-incremental
below
pso
{}
Assume input is direct encoded
DTMC
Searching for parameters parameters!
Next line contains parameters!
Number of parameters: 596
Parsing R{"dropped_packets"}=? [F "goal"]
Parse formula R=? [F "goal"] without a program.
Call stormpy for constraints
Build model
 WARN (DirectEncodingParser.cpp:120): No. of actions has to be declared. We may continue now, but future versions might not support this.
Built a model with 5040 states and 13327 transitions
Bisimulation yields model with 5040 states, 5040 actions and 13327 transitions
Stormpy finished collecting constraints
Push [1]
Call Z3 cli tool with timeout 10.0
SMT result:	unsat
Parse formula R=? [F "goal"] without a program.
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 9.88775430517591 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 9.88775430517591 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 9.646330618473824 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 9.431456052585185 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 9.109489287639922 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.895402544661147 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.570059888884321 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.441491068012418 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.275759608285462 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.185316354412834 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 8.044838146165993 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.9404892090990185 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.8982639676852004 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.832327929631907 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.799991038185154 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.754224559849176 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.714185593805262 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.690910255071823 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.674172214086746 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.651773793748401 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.630591706660723 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.620573346035015 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.608881079306067 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.593228103811914 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.581308690621483 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.572121054637763 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.563454990833991 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.556979400705614 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.550294542616927 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.544166886385609 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.535368542511695 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.530961323580587 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.528003538965588 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.523920515931064 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.519752816121198 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.514217677377783 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.51052313531777 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.508579988770059 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.504643428569178 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.501597970065609 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.499280628680647 with 5
Sampling assumes (without any checks) that the point is welldefined
Call stormpy for sampling
Sampling with stormpy successfully finished
Comparing 7.496276805160891 with 5
Time out has elapsed after 1200 seconds:
Traceback (most recent call last):
  File "parameter_synthesis.py", line 723, in <module>
    state = parameter_synthesis.main(standalone_mode=False)[0]
  File "/home/gradandpostdoc/stormenv/lib/python3.6/site-packages/click-8.0.1-py3.6.egg/click/core.py", line 1062, in main
    rv = self.invoke(ctx)
  File "/home/gradandpostdoc/stormenv/lib/python3.6/site-packages/click-8.0.1-py3.6.egg/click/core.py", line 1699, in invoke
    rv.append(sub_ctx.command.invoke(sub_ctx))
  File "/home/gradandpostdoc/stormenv/lib/python3.6/site-packages/click-8.0.1-py3.6.egg/click/core.py", line 1404, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/home/gradandpostdoc/stormenv/lib/python3.6/site-packages/click-8.0.1-py3.6.egg/click/core.py", line 763, in invoke
    return __callback(*args, **kwargs)
  File "/home/gradandpostdoc/stormenv/lib/python3.6/site-packages/click-8.0.1-py3.6.egg/click/decorators.py", line 84, in new_func
    return ctx.invoke(f, obj, *args, **kwargs)
  File "/home/gradandpostdoc/stormenv/lib/python3.6/site-packages/click-8.0.1-py3.6.egg/click/core.py", line 763, in invoke
    return __callback(*args, **kwargs)
  File "parameter_synthesis.py", line 500, in find_feasible_instantiation
    raise ValueError("Result does not match threshold")
ValueError: Result does not match threshold
